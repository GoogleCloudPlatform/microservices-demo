{{- if .Values.shoppingAssistantService.create }}
{{- if .Values.serviceAccounts.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.shoppingAssistantService.name }}
  namespace: {{ .Release.Namespace }}
  {{- if not .Values.serviceAccounts.annotationsOnlyForCartservice }}
  {{- with .Values.serviceAccounts.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}

---
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.shoppingAssistantService.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.shoppingAssistantService.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.shoppingAssistantService.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.shoppingAssistantService.name }}
    spec:
      {{- if .Values.serviceAccounts.create }}
      serviceAccountName: {{ .Values.shoppingAssistantService.name }}
      {{- else }}
      serviceAccountName: default
      {{- end }}
      terminationGracePeriodSeconds: 5
      {{- if .Values.securityContext.enable }}
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        {{- if .Values.seccompProfile.enable }}
        seccompProfile:
          type: {{ .Values.seccompProfile.type }}
        {{- end }}
      {{- end }}
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
        image: {{ .Values.images.repository }}/{{ .Values.shoppingAssistantService.name }}:{{ .Values.images.tag | default .Chart.AppVersion }}
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/secrets/google/key.json"
        - name: ALLOYDB_CLUSTER_NAME
          value: {{ .Values.shoppingAssistantService.alloydbClusterName | quote }}
        - name: ALLOYDB_INSTANCE_NAME
          value: {{ .Values.shoppingAssistantService.alloydbInstanceName | quote }}
        - name: ALLOYDB_DATABASE_NAME
          value: {{ .Values.shoppingAssistantService.alloydbDatabaseName | quote }}
        - name: ALLOYDB_TABLE_NAME
          value: {{ .Values.shoppingAssistantService.alloydbTableName | quote }}
        - name: ALLOYDB_SECRET_NAME
          value: {{ .Values.shoppingAssistantService.alloydbSecretName | quote }}
        - name: PROJECT_ID
          value: {{ .Values.shoppingAssistantService.projectId | quote }}
        - name: REGION
          value: {{ .Values.shoppingAssistantService.region | quote }}
        {{- if .Values.opentelemetryCollector.create }}
        - name: COLLECTOR_SERVICE_ADDR
          value: "{{ .Values.opentelemetryCollector.name }}:4317"
        - name: OTEL_SERVICE_NAME
          value: "{{ .Values.shoppingAssistantService.name }}"
        {{- end }}
        {{- if .Values.googleCloudOperations.tracing }}
        - name: ENABLE_TRACING
          value: "1"
        {{- end }}
        {{- if not .Values.googleCloudOperations.profiler }}
        - name: DISABLE_PROFILER
          value: "1"
        {{- end }}
        volumeMounts:
        - name: gcp-key
          mountPath: /var/secrets/google
          readOnly: true
      volumes:
      - name: gcp-key
        secret:
          secretName: {{ .Values.shoppingAssistantService.name }}-gcp-key
        resources:
          {{- toYaml .Values.shoppingAssistantService.resources | nindent 10 }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.shoppingAssistantService.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.shoppingAssistantService.name }}
spec:
  type: ClusterIP
  selector:
    app: {{ .Values.shoppingAssistantService.name }}
  ports:
  - name: http
    port: 80
    targetPort: 8080


# Make sure to create a secret like this one with the GCP credentials
# apiVersion: v1
# kind: Secret
# metadata:
#   name: {{ .Values.shoppingAssistantService.name }}-gcp-key
#   namespace: {{ .Release.Namespace }}
# type: Opaque
# data:
#   key.json: ""

{{ end -}}
