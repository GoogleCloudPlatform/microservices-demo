apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-frontend
  namespace: {{ .Release.Namespace }}
  labels:
    # Labels for the Deployment object itself (good for organization)
    app: {{ .Chart.Name }}
    environment: {{ coalesce .Values.global.environment .Values.environment | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      # This selector tells the Deployment how to find the Pods it manages.
      # It should match the Pod labels exactly.
      app: {{ .Chart.Name }}
      environment: {{ coalesce .Values.global.environment .Values.environment | quote }}
  template:
    metadata:

      labels:
      # These labels are applied to every Pod created.
      # The Service looks for these labels.
        app: {{ .Chart.Name }}
        environment: {{ coalesce .Values.global.environment .Values.environment | quote }}
    spec:
      nodeSelector:
        {{- toYaml (coalesce .Values.global.nodeSelector .Values.nodeSelector) | nindent 8 }}
      containers:
        - name: frontend
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          envFrom:  
            - configMapRef:
                name: {{ .Release.Name }}-frontend-config
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
