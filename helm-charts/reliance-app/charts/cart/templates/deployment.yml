apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}

   # Labels for the Deployment object itself (good for organization)
  labels:
    app: {{ .Chart.Name }}
    environment: {{ .Values.environment }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      # This selector tells the Deployment how to find the Pods it manages.
      # It should match the Pod labels exactly.
      app: {{ .Chart.Name }}
      environment: {{ .Values.environment }}  
  template:
    metadata:
      labels:
        # These labels are applied to every Pod created.
        # The Service looks for these labels.
        app: {{ .Chart.Name }}
        environment: {{ .Values.environment }}
    spec:
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
           - name: CartStore
             value: {{ .Values.secrets.CartStore | quote }}  
          envFrom:
            - secretRef:
                name: cart-db-connection # The name of the secret in Secret providerclass
          livenessProbe:
            exec:
              command: ["/usr/bin/grpc_health_probe", "-addr=:{{ .Values.service.port }}"]
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            exec:
              command: ["/usr/bin/grpc_health_probe", "-addr=:{{ .Values.service.port }}"]
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: secrets-store-inline
              mountPath: /mnt/secrets-store
              readOnly: true
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: azure-kv-cartservice # The name of the SecretProviderClass        
