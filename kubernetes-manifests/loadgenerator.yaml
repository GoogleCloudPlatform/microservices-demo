# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
  labels:
    app: loadgenerator
spec:
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: loadgenerator
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      initContainers:
      - command:
        - /bin/sh
        - -exc
        - |
          MAX_RETRIES=12
          RETRY_INTERVAL=10

          check_url() {
            local url=$1
            local name=$2
            echo "Checking endpoint: $name ($url)"
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i/$MAX_RETRIES: Pinging $name: $url..."
              # Use --spider to not download the body, -T for timeout
              STATUSCODE=$(wget --spider --server-response -T 5 "$url" 2>&1 | awk '/^  HTTP/{print $2}' || true)

              if [ "$STATUSCODE" = "200" ]; then
                  echo "$name ($url) is reachable."
                  return 0
              fi

              echo "Warning: Could not reach $name ($url) on attempt $i - Status code: ${STATUSCODE:-"No response"}"

              if [ $i -lt $MAX_RETRIES ]; then
                sleep $RETRY_INTERVAL
              fi
            done
            echo "Error: Failed to reach $name ($url) after $MAX_RETRIES attempts."
            return 1
          }

          # Check Frontend service from environment variable
          if [ -z "${FRONTEND_ADDR}" ]; then
            echo "Error: FRONTEND_ADDR environment variable is not set."
            exit 1
          fi
          check_url "http://${FRONTEND_ADDR}" "Frontend"
          if [ $? -ne 0 ]; then
            exit 1
          fi

          # Check hardcoded Furniture service
          check_url "http://10.5.0.2:3000/furniture" "Furniture Service"
          if [ $? -ne 0 ]; then
            exit 1
          fi

          echo "All required services are up."
          exit 0
        name: frontend-check
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: busybox:latest
        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
      containers:
      - name: main
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: loadgenerator
        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
        - name: USERS
          value: "10"
        - name: RATE
          value: "1"
        # Multicloud service URLs - actual production endpoints
        - name: AWS_ACCOUNTING_URL
          value: "http://54.163.148.73:8080"
        - name: AZURE_ANALYTICS_URL
          value: "http://20.160.153.10:8080"
        - name: GCP_CRM_URL
          value: "http://10.2.0.2:8080"
        - name: GCP_INVENTORY_URL
          value: "http://10.132.0.21:8080"
        resources:
          requests:
            cpu: 300m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loadgenerator
