name: Container Image CI

on:
  pull_request:
    branches: [main]

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by GitHub Actions
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

jobs:
  discover_services:
    runs-on: ubuntu-latest

    outputs:
      services: ${{ steps.discover_services.outputs.services }}

    steps:
      - uses: actions/checkout@v4
      - name: Discover services
        id: discover_services
        run: |
          SERVICES=$(find microservices-demo/src -mindepth 1 -maxdepth 1 -type d -exec test -f "{}/Dockerfile" \; -print | xargs -n1 basename)
          SERVICES_JSON=$(echo "$SERVICES" | jq -R . | jq -sc .)
          
          echo "=================================="
          echo "Detected services: $SERVICES_JSON"
          echo "=================================="

          echo "services=$SERVICES_JSON" >> "$GITHUB_OUTPUT"

  build_and_scan:
    needs: discover_services
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: ${{ fromJson(needs.discover_services.outputs.services) }}

    env:
      IMAGE_TAG: ${{ matrix.service }}:ci-${{ github.sha }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: Build Docker image (no push)
        uses: docker/build-push-action@v5
        with:
          context: ./microservices-demo/src/${{ matrix.service }}
          file: ./microservices-demo/src/${{ matrix.service }}/Dockerfile
          platforms: linux/amd64
          push: false
          tags: |
            ${{ env.IMAGE_TAG }}

      # Debug steps to verify the image tag
    #   - name: Verify Docker image
    #     run: |
    #       echo "Checking if image exists locally:"
    #       docker images | grep ${{ matrix.service }}
    #       echo "Image details:"
    #       docker inspect ${{ env.IMAGE_TAG }} --format='{{.Id}}'

      - name: Docker Scout Login
        run: |
          echo "${{ env.DOCKERHUB_PASSWORD }}" | docker login -u "${{ env.DOCKERHUB_USERNAME }}" --password-stdin
          docker scout version

      - name: Docker Scout
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ env.IMAGE_TAG }}
          sarif-file: sarif.output.json
          summary: true

      - name: Upload Docker Scout SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif.output.json

      - name: Trivy scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: '${{ env.IMAGE_TAG }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      - name: Checkov scan
        uses: bridgecrewio/checkov-action@master
        with:
          quiet: true
          soft_fail: true
          log_level: 'WARNING'
          docker_image: ${{ env.IMAGE_TAG }}
          dockerfile_path: ./microservices-demo/src/${{ matrix.service }}/Dockerfile
          output_format: sarif
          output_file_path: checkov-results.sarif

      - name: Upload Checkov SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: checkov-results.sarif
