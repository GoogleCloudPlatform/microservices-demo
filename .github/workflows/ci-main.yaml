name: "Continuous Integration - Main/Release"

on:
  push:
    branches:
      - main
      - release/*
    paths-ignore:
      - '**/README.md'
      - 'kustomize/**'
      - '.github/workflows/kustomize-build-ci.yaml'
      - 'terraform/**'
      - '.github/workflows/terraform-validate-ci.yaml'
      - 'helm-chart/**'
      - '.github/workflows/helm-chart-ci.yaml'

jobs:
  code-tests:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0'
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - name: Go Unit Tests
        run: |
          for SERVICE in "shippingservice" "productcatalogservice"; do
            echo "testing $SERVICE..."
            pushd src/$SERVICE
            go test
            popd
          done
      - name: C# Unit Tests
        run: dotnet test src/cartservice/

  deployment-tests:
    runs-on: ubuntu-24.04
    needs: code-tests
    steps:
      - uses: actions/checkout@v4

      # Configurar AWS creds
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      #  Conectarse al cluster EKS
      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name online-boutique-cluster --region ${{ secrets.AWS_REGION }}

      # Desplegar usando Skaffold (igual que antes, pero ya contra EKS)
      - name: Build + Deploy to EKS
        run: |
          NAMESPACE="main-deploy"
          kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -
          echo "Deploying application..."
          skaffold config set --global local-cluster false
          skaffold run --default-repo=$AWS_ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/online-boutique \
            --tag=$GITHUB_SHA --namespace=$NAMESPACE -p network-policies

      # ‚è≥ Esperar que arranquen los pods
      - name: Wait For Pods
        run: |
          kubectl config set-context --current --namespace=main-deploy
          for DEPLOY in redis-cart adservice cartservice checkoutservice currencyservice \
                       emailservice frontend loadgenerator paymentservice \
                       productcatalogservice recommendationservice shippingservice; do
            kubectl wait --for=condition=available --timeout=1000s deployment/$DEPLOY
          done

      # Smoke Test
      - name: Smoke Test
        run: |
          set -x
          kubectl delete pod -l app=loadgenerator || true
          REQUEST_COUNT="0"
          while [[ "$REQUEST_COUNT"  -lt "50"  ]]; do
              sleep 5
              REQUEST_COUNT=$(kubectl logs -l app=loadgenerator | grep Aggregated | awk '{print $2}')
          done
          ERROR_COUNT=$(kubectl logs -l app=loadgenerator | grep Aggregated | awk '{print $3}' | sed "s/[(][^)]*[)]//g")
          if [[ "$ERROR_COUNT" -gt "0" ]]; then
            exit 1
          fi
