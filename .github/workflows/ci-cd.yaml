name: CI/CD Monorepo + Helm Chart

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main

env:
  GHCR_REPO: ghcr.io/phrafa/microservices-demo

jobs:
  build-and-push-images:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - adservice
          - cartservice
          - checkoutservice
          - currencyservice
          - emailservice
          - paymentservice
          - productcatalogservice
          - recommendationservice
          - shippingservice
          - frontend
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        if: matrix.service != 'frontend' && contains(matrix.service, 'service')
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Node.js
        if: matrix.service == 'frontend'
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Build & Test
        run: |
          if [ -d "${{ matrix.service }}" ]; then
            cd "${{ matrix.service }}"
            if [ -f pom.xml ]; then
              mvn clean verify -DskipTests=false
            fi
            if [ -f package.json ]; then
              npm ci
              npm test -- --watch=false --browsers=ChromeHeadless
            fi
            cd ..
          fi

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          if [ -d "${{ matrix.service }}" ]; then
            cd "${{ matrix.service }}"
            docker build -t ${{ env.GHCR_REPO }}-${{ matrix.service }}:latest .
            docker push ${{ env.GHCR_REPO }}-${{ matrix.service }}:latest
            cd ..
          fi

  deploy-via-helm:
    name: Deploy via Helm Chart
    runs-on: ubuntu-latest
    needs: build-and-push-images
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Deploy Helm Chart
        run: |
          cd helm-chart
          helm upgrade --install microservices-demo . \
            --namespace default \
            --create-namespace \
            --set images.repository=${{ env.GHCR_REPO }} \
            --set images.tag=latest

      - name: Verify Rollout
        run: |
          for svc in adservice cartservice checkoutservice currencyservice emailservice paymentservice productcatalogservice recommendationservice shippingservice frontend; do
            if kubectl get deployment "$svc" &> /dev/null; then
              kubectl rollout status deployment/"$svc" --timeout=120s
            fi
          done