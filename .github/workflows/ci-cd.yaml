name: CI/CD Monorepo

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      build_all:
        description: 'Build all services regardless of code changes'
        required: false
        default: 'false'
        type: boolean

env:
  GHCR_REPO: ghcr.io/phrafa/microservices-demo

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - adservice
          - cartservice
          - checkoutservice
          - currencyservice
          - emailservice
          - paymentservice
          - productcatalogservice
          - recommendationservice
          - shippingservice
          - frontend
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Decide whether to build this service
        id: change-check
        run: |
          # If build_all via workflow_dispatch is true, force a build
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.build_all }}" = "true" ]; then
            echo "build=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Determine the commit range for diff
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA=${{ github.event.pull_request.base.sha }}
            HEAD_SHA=${{ github.event.pull_request.head.sha }}
          else
            BASE_SHA=${{ github.event.before }}
            HEAD_SHA=${{ github.sha }}
          fi

          # Check for any diff under the service directory
          if git diff --quiet "$BASE_SHA" "$HEAD_SHA" -- "src/${{ matrix.service }}/"; then
            echo "build=false" >> $GITHUB_OUTPUT
          else
            echo "build=true" >> $GITHUB_OUTPUT
          fi

      - name: Setup tooling
        if: steps.change-check.outputs.build == 'true'
        run: |
          case "${{ matrix.service }}" in
            adservice)
              echo "Setup Java 19"
              ;;
            cartservice)
              echo "Setup .NET 9"
              ;;
            checkoutservice|frontend|productcatalogservice|shippingservice)
              echo "Setup Go 1.22"
              ;;
            currencyservice|paymentservice)
              echo "Setup Node 16"
              ;;
            emailservice|recommendationservice)
              echo "Setup Python 3.10"
              ;;
          esac
        # Separate steps for each environment to install correctly
      - name: Setup Java 19
        if: steps.change-check.outputs.build == 'true' && matrix.service == 'adservice'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '19'

      - name: Setup .NET 9
        if: steps.change-check.outputs.build == 'true' && matrix.service == 'cartservice'
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '9.0.x'

      - name: Setup Go 1.22
        if: steps.change-check.outputs.build == 'true' && contains(matrix.service, 'service') && (matrix.service == 'checkoutservice' || matrix.service == 'frontend' || matrix.service == 'productcatalogservice' || matrix.service == 'shippingservice')
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'

      - name: Setup Node 16
        if: steps.change-check.outputs.build == 'true' && (matrix.service == 'currencyservice' || matrix.service == 'paymentservice')
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Setup Python 3.10
        if: steps.change-check.outputs.build == 'true' && (matrix.service == 'emailservice' || matrix.service == 'recommendationservice')
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Build & Test
        if: steps.change-check.outputs.build == 'true'
        run: |
          cd src/${{ matrix.service }}
          case "${{ matrix.service }}" in
            adservice)
              bash gradlew clean build
              ;;
            cartservice)
              dotnet test "cartservice.sln"
              ;;
            checkoutservice|frontend|productcatalogservice|shippingservice)
              go test ./...
              ;;
            currencyservice|paymentservice)
              npm ci
              ;;
            emailservice|recommendationservice)
              pip install -r requirements.txt
              ;;
          esac

      - name: Log in to GitHub Container Registry
        if: steps.change-check.outputs.build == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and Push Docker Image
        if: steps.change-check.outputs.build == 'true'
        run: |
          if [ "${{ matrix.service }}" = "cartservice" ]; then
            cd src/${{ matrix.service }}/src
          else
            cd src/${{ matrix.service }}
          fi
          docker build -t ${{ env.GHCR_REPO }}/${{ matrix.service }}:${{ github.sha }} .
          docker push ${{ env.GHCR_REPO }}/${{ matrix.service }}:${{ github.sha }}

  bump-image-tags:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install yq
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.30.8/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
      - name: Bump image tags in values.yaml
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          # Determine BASE_SHA and HEAD_SHA same as in build job
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA=${{ github.event.pull_request.base.sha }}
            HEAD_SHA=${{ github.event.pull_request.head.sha }}
          else
            BASE_SHA=${{ github.event.before }}
            HEAD_SHA=${{ github.sha }}
          fi

          git checkout -b update-image-tag-${{ github.sha }}

          SERVICES=(adservice cartservice checkoutservice currencyservice emailservice paymentservice productcatalogservice recommendationservice shippingservice frontend)

          for service in "${SERVICES[@]}"; do
            # Check if there were changes in src/<service>
            if ! git diff --quiet "$BASE_SHA" "$HEAD_SHA" -- "src/${service}/"; then
              subdir="${service%service}"
              yq eval -i ".images.tag = \"${{ github.sha }}\"" "helm-chart/${subdir}/values.yaml"
            fi
          done

          git add helm-chart/*/values.yaml
          if git diff --cached --quiet; then
            echo "No values.yaml changes detected; skipping commit."
          else
            git commit -m "chore: bump image tag to ${{ github.sha }}"
            git push --set-upstream origin update-image-tag-${{ github.sha }}
          fi
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: bump image tag to ${{ github.sha }}"
          branch: update-image-tag-${{ github.sha }}
          title: "Bump image tag to ${{ github.sha }}"
          body: "This PR bumps the image tags to ${{ github.sha }} for deployment."